name: Generate DotSlash files

on:
  release:
    types:
      - published

permissions:
  contents: write

jobs:
  dotslash:
    if: ${{ !github.event.release.draft }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout release tag
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.tag_name }}
          fetch-depth: 0

      - name: Resolve release tag
        id: release_tag
        run: |
          set -euo pipefail
          TAG='${{ github.event.release.tag_name }}'
          if [[ -z "$TAG" ]]; then
            echo "Failed to discover release tag from event payload" >&2
            exit 1
          fi
          echo "tag=$TAG" >> "$GITHUB_OUTPUT"
          echo "Resolved release tag: $TAG" >> "$GITHUB_STEP_SUMMARY"

      - name: Verify release assets ready
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: ${{ github.event.release.tag_name }}
        run: |
          set -euo pipefail
          MAX_ATTEMPTS=5
          for attempt in $(seq 1 "$MAX_ATTEMPTS"); do
            rm -f /tmp/assets-count /tmp/gh-release-error
            if gh release view "$TAG" --repo "${{ github.repository }}" --json assets --jq '.assets | length' 1>/tmp/assets-count 2>/tmp/gh-release-error; then
              count=$(cat /tmp/assets-count)
              rm -f /tmp/assets-count /tmp/gh-release-error
              if [[ "$count" -gt 0 ]]; then
                echo "Release assets detected for $TAG (count=$count)" >> "$GITHUB_STEP_SUMMARY"
                exit 0
              fi
              echo "::warning::Release $TAG has no assets yet (attempt $attempt/$MAX_ATTEMPTS)" >&2
            else
              err=$(cat /tmp/gh-release-error 2>/dev/null || true)
              echo "::warning::gh release view failed for $TAG on attempt $attempt/$MAX_ATTEMPTS: $err" >&2
            fi
            if [[ "$attempt" -lt "$MAX_ATTEMPTS" ]]; then
              sleep $((attempt * 5))
            fi
          done
          echo "::error::GitHub release $TAG is not yet accessible or has no assets after $MAX_ATTEMPTS attempts" >&2
          exit 1

      - name: Generate & upload DotSlash file(s)
        uses: facebook/dotslash-publish-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          config: .github/workflows/dotslash-config.json
          tag: ${{ steps.release_tag.outputs.tag }}
