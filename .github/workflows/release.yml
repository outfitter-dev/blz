name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag (e.g., v0.1.0)'
        required: true
        type: string

permissions:
  contents: write

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # macOS targets
          - os: macos-latest
            target: aarch64-apple-darwin
            name: blz-aarch64-apple-darwin
          - os: macos-latest
            target: x86_64-apple-darwin
            name: blz-x86_64-apple-darwin
          # Linux targets
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            name: blz-x86_64-unknown-linux-gnu
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            name: blz-aarch64-unknown-linux-gnu
            cross: true

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install cross
        if: matrix.cross
        run: cargo install cross --git https://github.com/cross-rs/cross

      - name: Build binary
        run: |
          if [ "${{ matrix.cross }}" = "true" ]; then
            cross build --release --target ${{ matrix.target }} --bin blz
          else
            cargo build --release --target ${{ matrix.target }} --bin blz
          fi

      - name: Package binary
        run: |
          cd target/${{ matrix.target }}/release
          tar czf ../../../${{ matrix.name }}.tar.gz blz
          cd ../../../
          sha256sum ${{ matrix.name }}.tar.gz > ${{ matrix.name }}.tar.gz.sha256

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: |
            ${{ matrix.name }}.tar.gz
            ${{ matrix.name }}.tar.gz.sha256

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create release notes
        run: |
          echo "# Release ${{ github.ref_name }}" > release_notes.md
          echo "" >> release_notes.md
          echo "## Installation" >> release_notes.md
          echo "" >> release_notes.md
          echo "### Homebrew (macOS/Linux)" >> release_notes.md
          echo '```bash' >> release_notes.md
          echo "brew tap outfitter-dev/tap" >> release_notes.md
          echo "brew install blz" >> release_notes.md
          echo '```' >> release_notes.md
          echo "" >> release_notes.md
          echo "### Direct Download" >> release_notes.md
          echo "" >> release_notes.md
          echo "Download the appropriate binary for your platform from the assets below." >> release_notes.md
          echo "" >> release_notes.md
          echo "## SHA256 Checksums" >> release_notes.md
          echo '```' >> release_notes.md
          cat artifacts/*/*.sha256 >> release_notes.md
          echo '```' >> release_notes.md

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          body_path: release_notes.md
          files: |
            artifacts/**/*.tar.gz
            artifacts/**/*.sha256
          draft: false
          prerelease: ${{ contains(github.ref_name, '-') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  update-homebrew:
    name: Update Homebrew Formula
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Homebrew Formula Update
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.HOMEBREW_TAP_TOKEN }}
          repository: outfitter-dev/homebrew-tap
          event-type: formula-update
          client-payload: '{"formula": "blz", "version": "${{ github.ref_name }}"}'