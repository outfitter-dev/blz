name: Rust CI

on:
  pull_request:
  push:
    branches: [main]

permissions:
  contents: read

jobs:
  rust:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      RUST_BACKTRACE: 1
      # Reduce proptest cases in CI to avoid rare OOM/stack-overflow flakes
      PROPTEST_CASES: 128
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-
      - name: Cache cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-index-
      - name: Cache target directory
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-target-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-target-
      - name: Format (check)
        run: cargo fmt --all -- --check
      - name: Clippy (deny clippy warnings; allow missing docs)
        run: |
          # Run clippy on non-test code with strict settings
          cargo clippy --workspace --all-features --bins --examples -- -D warnings -A missing_docs -A clippy::missing_errors_doc -A clippy::missing_panics_doc
          # Run clippy on tests with relaxed settings for test-appropriate patterns
          cargo clippy --workspace --all-features --tests -- -D warnings -A missing_docs -A clippy::missing_errors_doc -A clippy::missing_panics_doc -A clippy::unwrap_used -A clippy::expect_used -A clippy::panic -A clippy::unimplemented -A clippy::todo -A clippy::disallowed_macros -A clippy::needless_collect -A clippy::unnecessary_wraps -A clippy::match_wildcard_for_single_variants -A clippy::format_push_string -A clippy::unnecessary_map_or -A clippy::case_sensitive_file_extension_comparisons
      - name: Build (no benches)
        run: cargo build --workspace --all-features --bins --examples --tests
      - name: Test
        run: |
          # Run core tests first to surface any failures early
          # Note: The only previously flaky property test is marked #[ignore]
          cargo test -p blz-core --all-features
          cargo test -p blz-cli --all-features
          cargo test -p blz-mcp --all-features
