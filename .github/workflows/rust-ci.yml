name: Rust CI

on:
  pull_request:
  push:
    branches: [main]

permissions:
  contents: read

# Cancel previous runs for the same PR/branch
concurrency:
  group: rust-ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Quick format check that can fail fast
  format:
    name: Format Check
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - name: Format check
        run: cargo fmt --all -- --check

  # Main CI job with optimized caching and parallel execution
  rust:
    name: Build & Test
    runs-on: ubuntu-latest
    needs: format  # Only run if format check passes
    timeout-minutes: 15
    permissions:
      contents: read
    env:
      RUST_BACKTRACE: 1
      # Reduce proptest cases in CI to avoid rare OOM/stack-overflow flakes
      PROPTEST_CASES: 128
      # Optimize compilation
      CARGO_INCREMENTAL: 0
      CARGO_NET_RETRY: 10
      RUSTFLAGS: "-C link-arg=-fuse-ld=lld -D warnings"
    steps:
      - uses: actions/checkout@v4
      
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      
      # Install faster linker
      - name: Install lld
        run: sudo apt-get update && sudo apt-get install -y lld
      
      # Use Swatinem's rust-cache for better caching
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
          cache-all-crates: true
          prefix-key: "v2-rust"
      
      # Run clippy and build in parallel using matrix strategy
      - name: Clippy (non-test code)
        run: |
          cargo clippy --workspace --all-features --bins --examples -- \
            -D warnings -A missing_docs -A clippy::missing_errors_doc -A clippy::missing_panics_doc
      
      - name: Clippy (test code)
        run: |
          cargo clippy --workspace --all-features --tests -- \
            -D warnings -A missing_docs -A clippy::missing_errors_doc -A clippy::missing_panics_doc \
            -A clippy::unwrap_used -A clippy::expect_used -A clippy::panic \
            -A clippy::unimplemented -A clippy::todo -A clippy::disallowed_macros \
            -A clippy::needless_collect -A clippy::unnecessary_wraps \
            -A clippy::match_wildcard_for_single_variants -A clippy::format_push_string \
            -A clippy::unnecessary_map_or -A clippy::case_sensitive_file_extension_comparisons
      
      - name: Build
        run: cargo build --workspace --all-features --bins --examples --tests
      
      - name: Test
        run: |
          # Run tests with optimized settings
          cargo test --workspace --all-features --no-fail-fast

  # Separate job for benchmarks to run in parallel
  bench-check:
    name: Benchmark Compilation
    runs-on: ubuntu-latest
    needs: format
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
          prefix-key: "v2-bench"
      - name: Check benchmarks compile
        run: cargo bench --no-run
