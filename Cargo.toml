[workspace]
resolver = "2"
members = [
    "crates/blz-core",
    "crates/blz-cli",
    "crates/blz-mcp",
]

[workspace.package]
version = "0.1.0-dev"
edition = "2024"
authors = ["Outfitter Dev"]
license = "MIT"
repository = "https://github.com/outfitter-dev/blz"
rust-version = "1.85.0"

[workspace.dependencies]
anyhow = "1"
serde = { version = "1", features = ["derive"] }
serde_json = "1"
toml = "0.8"
tokio = { version = "1", features = ["full"] }
reqwest = { version = "0.12", default-features = false, features = ["rustls-tls", "gzip", "brotli", "json", "stream", "http2"] }
sha2 = "0.10"
base64 = "0.22"
clap = { version = "4", features = ["derive"] }
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["fmt", "json"] }
chrono = { version = "0.4", features = ["serde"] }
directories = "5"
futures = "0.3"

# Parsing & indexing
tree-sitter = "0.24"
tree-sitter-md = "0.3"
tantivy = "0.22"
fuzzy-matcher = "0.3"

# MCP server
# rmcp = "0.4"  # Will uncomment when available

# Performance & profiling
criterion = { version = "0.5", features = ["async_tokio"] }
pprof = { version = "0.15", features = ["flamegraph", "protobuf-codec"] }
sysinfo = "0.32"
tempfile = "3"
url = "2"

# Internal crates
blz-core = { path = "crates/blz-core" }

[workspace.lints.rust]
unsafe_code = "deny"
missing_docs = "warn"

[workspace.lints.clippy]
# Set group priorities correctly - specific lints override groups
pedantic = { level = "warn", priority = -1 }
nursery = { level = "warn", priority = -1 }
cargo = { level = "warn", priority = -1 }

# Allow some pedantic lints with higher priority
module_name_repetitions = "allow"
must_use_candidate = "allow" 
missing_errors_doc = "allow"
missing_panics_doc = "allow"
cargo_common_metadata = "allow"
multiple_crate_versions = "allow"

# Warn on dangerous patterns in production code
# Note: These are allowed in test code via #[cfg_attr(test, allow(...))]
unwrap_used = "warn"
expect_used = "warn" 
panic = "warn"
unimplemented = "warn"
todo = { level = "warn", priority = 1 }
