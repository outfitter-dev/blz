skip_in_ci: true
colors: true

pre-commit:
  # Keep pre-commit blazing fast: hygiene + fmt + quick compile
  parallel: true
  commands:
    whitespace:
      run: git diff --check --staged

    rustfmt:
      run: |
        bash -lc '
          if ! command -v rustfmt >/dev/null; then
            echo "rustfmt not found. Install with: rustup component add rustfmt"
            echo "Or run: just bootstrap-fast"
            exit 2
          fi
          cargo fmt --all
        '
      stage_fixed: true

    cargo_check:
      run: cargo check --workspace --quiet

commit-msg:
  commands:
    commitlint:
      run: |
        if command -v commitlint &> /dev/null; then
          commitlint --edit {1}
        else
          echo "commit message check failed: commitlint not installed."
          echo "Install with: cargo install commitlint-rs"
          echo "Or run: just bootstrap-fast"
          exit 2
        fi

pre-push:
  # Fast by default; enable strict gates locally with BLZ_STRICT=1
  parallel: false
  commands:
    clippy_strict:
      always_run: true
      run: |
        bash -lc '
          if [ -f .hooks/allow-strict-bypass ]; then
            echo "⏭  Strict bypass enabled (.hooks/allow-strict-bypass). Skipping clippy_strict."
            exit 0
          fi
          if ! cargo clippy -V >/dev/null 2>&1; then
            echo "clippy not available. Install with: rustup component add clippy"
            echo "Or run: just bootstrap-fast"
            exit 2
          fi
          if command -v sccache >/dev/null; then
            export RUSTC_WRAPPER=sccache
          else
            echo "(tip) Install sccache to speed builds: cargo install sccache or run just bootstrap-fast"
          fi
          cargo clippy --workspace --all-targets -- -D warnings
        '

    tests:
      always_run: true
      run: |
        bash -lc '
          if [ -f .hooks/allow-strict-bypass ]; then
            echo "⏭  Strict bypass enabled (.hooks/allow-strict-bypass). Skipping tests."
            exit 0
          fi
          if command -v sccache >/dev/null; then
            export RUSTC_WRAPPER=sccache
          else
            echo "(tip) Install sccache to speed builds: cargo install sccache or run just bootstrap-fast"
          fi
          if command -v cargo-nextest >/dev/null; then
            cargo nextest run --workspace
            cargo test --doc --workspace --quiet
          else
            echo "cargo-nextest not found. Install with: cargo install cargo-nextest (or run just bootstrap-fast). Falling back to cargo test."
            cargo test --workspace --quiet
          fi
        '
