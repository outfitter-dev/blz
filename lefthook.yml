# Lefthook configuration for Rust project
# https://github.com/evilmartians/lefthook
#
# Installation:
#   brew install lefthook          # macOS with Homebrew
#   cargo install lefthook          # Cross-platform with Cargo
#   curl -sSfL https://raw.githubusercontent.com/evilmartians/lefthook/master/install.sh | sh  # Script
#
# Setup:
#   lefthook install                # Install git hooks
#
# Required tools:
#   cargo install commitlint-rs     # Rust-based commit linter

# Skip hooks in CI/CD environments
skip_in_ci: true

# Colors in output
colors: true

# Hooks configuration
pre-commit:
  parallel: true
  commands:
    # Rust formatting check
    fmt:
      glob: "*.rs"
      run: cargo fmt -- --check
      skip:
        - merge
        - rebase
    
    # Rust linting with Clippy (using existing script)
    clippy:
      glob: "*.rs"
      run: ./scripts/lint.sh
      skip:
        - merge
        - rebase
    
    # Act validation (fast mode) - optional
    # Uncomment to enable act validation in pre-commit
    # act-fast:
    #   run: ./scripts/act-validate.sh fast rust-ci-local
    #   skip:
    #     - merge
    #     - rebase
    #   env:
    #     VERBOSE: 0

commit-msg:
  commands:
    # Validate commit message with commitlint-rs
    commitlint:
      run: |
        if command -v commitlint &> /dev/null; then
          commitlint --edit {1}
        else
          echo "⚠️  commitlint-rs not installed. Install with: cargo install commitlint-rs"
          echo "    Skipping commit message validation..."
        fi

pre-push:
  parallel: false  # Sequential for proper validation order
  commands:
    # Act validation (full CI check) - runs actual GitHub Actions locally
    # This provides confidence before pushing to remote
    act-validation:
      run: |
        if command -v act &> /dev/null; then
          echo "🔍 Running CI validation with act..."
          ./scripts/act-validate.sh fast rust-ci-local
        else
          echo "⚠️  act not installed - skipping local CI validation"
          echo "    Install with: brew install act"
        fi
      skip:
        - wip
        - draft
        - merge
    
    # Run tests before push (using Makefile)
    test:
      run: make test
      skip:
        - wip
        - draft
    
    # Build check (using Makefile)
    build:
      run: make build
      skip:
        - wip
        - draft

# Post-merge hook to remind about dependencies
post-merge:
  commands:
    deps-reminder:
      run: echo "📦 Remember to run 'cargo build' if Cargo.toml changed"