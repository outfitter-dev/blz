#!/bin/sh

# Wrapper script for the blz binary
# This script finds and runs the appropriate platform-specific binary

set -eu

# Detect platform
OS="$(uname -s)"
ARCH="$(uname -m)"

case "$OS" in
  Darwin)
    case "$ARCH" in
      x86_64) PLATFORM="darwin-x64" ;;
      arm64) PLATFORM="darwin-arm64" ;;
      *) echo "Unsupported architecture: $ARCH" >&2; exit 1 ;;
    esac
    BINARY="blz"
    ;;
  Linux)
    case "$ARCH" in
      x86_64) PLATFORM="linux-x64" ;;
      aarch64) PLATFORM="linux-arm64" ;;
      *) echo "Unsupported architecture: $ARCH" >&2; exit 1 ;;
    esac
    BINARY="blz"
    ;;
  MINGW*|MSYS*|CYGWIN*)
    PLATFORM="win32-x64"
    BINARY="blz.exe"
    ;;
  *)
    echo "Unsupported OS: $OS" >&2
    echo "Please install blz using: cargo install blz-cli" >&2
    exit 1
    ;;
esac

# Get the directory of this script
SCRIPT_DIR="$(cd "$(dirname "$0")" && pwd)"

# Look for the binary in the platform-specific package
# When installed via npm, platform packages are in node_modules/@outfitter/blz-{platform}
NODE_MODULES="$SCRIPT_DIR/../node_modules"
if [ -d "$NODE_MODULES/@outfitter/blz-$PLATFORM" ]; then
  BINARY_PATH="$NODE_MODULES/@outfitter/blz-$PLATFORM/$BINARY"
elif [ -d "$SCRIPT_DIR/../../@outfitter/blz-$PLATFORM" ]; then
  # Alternative location when optional deps are hoisted beside the main package
  BINARY_PATH="$SCRIPT_DIR/../../@outfitter/blz-$PLATFORM/$BINARY"
else
  echo "Error: blz binary package not found for $PLATFORM" >&2
  echo "Please reinstall with: npm install -g @outfitter/blz" >&2
  exit 1
fi

if [ ! -x "$BINARY_PATH" ]; then
  echo "Error: blz binary not executable at: $BINARY_PATH" >&2
  echo "Please reinstall with: npm install -g @outfitter/blz" >&2
  exit 1
fi

# Execute the binary with all arguments
exec "$BINARY_PATH" "$@"